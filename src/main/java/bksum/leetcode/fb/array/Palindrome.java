package bksum.leetcode.fb.array;

public class Palindrome {

	public boolean isPalindrome(String s) {
		System.out.println("enter isPalindrome");

		return (s.equals(new StringBuffer(s).reverse().toString()));
	}

	public boolean validPalindromeX(String s) {
		System.out.println("enter validPalindrome");
		StringBuffer input = new StringBuffer(s);
		if (isPalindrome(s)) {
			System.out.println("enter validPalindrome1");

			return (true);
		}
		for (int i = 0; i < input.length(); i++) {
			System.out.println("enter validPalindrome loop" + i);

			String removeOneChar = new StringBuffer(s).deleteCharAt(i).toString();
			if (isPalindrome(removeOneChar))
				return (true);
		}
		return (false);
	}

	public boolean isPalindrome(String s, int start, int end) {
		System.out.println("xx start :" + start );
		System.out.println("xx end:" + end);

		System.out.println("xx start + (end-1) / 2 :" + (start + (end-1) / 2) );
		System.out.println("xx (end-1) / 2 :" +  (end-1) / 2 );

		for (int i = start; i <= start + (end-1) / 2; i++) {
			System.out.println("xx s.charAt(i) :" + s.charAt(i) );
			System.out.println("xx s.charAt(end - i + start) :" + s.charAt(end - i + start));
			if (s.charAt(i) != s.charAt(end - i + start)) {
				
				return false;
			}
		}
		return true;
	}

	public boolean validPalindrome(String s) {
		for (int i = 0; i < s.length() / 2; i++) {
			System.out.println("s.charAt(i) :" + s.charAt(i) );
			System.out.println("s.charAt(s.length() - 1 - i) :" + s.charAt(s.length() - 1 - i) );

			if (s.charAt(i) != s.charAt(s.length() - 1 - i)) {
				int j = s.length() - 1 - i;
				return (isPalindrome(s, i + 1, j) || isPalindrome(s, i, j - 1));
			}
		}
		return (true);
	}

	public static void main(String[] args) {
		String input = "abc";
//		input = "ezhcvzzssssssssssssssssszsdrfsdfsdjohmdvdmirolicyblpgrdcdrhnhmpywartuszaaufjggdbrsocwfwefslflplclltubpzocdqxcvcubxveqkosbrphmoqqlxjifmdumpbchbwxyaneernszgsrcgrbhzsastrmvjgsntvxicvnmkyjxcpgzfwlznuxrdlhrtwktpnfmkjqpugeavlayyhzevicsgzjydketwlrquqcukqyhzxkhrrtmmzfzqvpqmspkamkjgfblbdabddkiepzwseeakddjszyeapgoznixdghlnrhxzgegtlzfrarmpkfmdeitlhxogprzoijwptousenhiezrfsfosehemdhfnapfquzqicotafgjiwrsohhqybcvxysttxjbjxdfqyexibyfvxzywtssmsdmgjcyvljgykdgcyehfnnsoaexalrcqhirjhrmrzcyyzrslktrhxirfpwzhrgzlhgougvhulgybfemvpzqbnqlaxwbxsfqhyohsemnuzykpuyvxtogzeuhqsxsmlsshxdkgqynfhketiqmaumcrtgrlfejjkeckvumefotlhvdhguglzjskzgavatxgzohnpdcqkuayljhuvklksjdmxghqzbomubzeweobzvxvkzfprbpgokncbggdrbrfleskxduugbzevhkkwrsefmyzcygqjofysmwwfujsiypmcobcrhufwvvyabmucgvhobjrwgeqxgxsntvntlocnrnlkpaywpntfpvsohnfiefyzpqfvpcwubyarfuztiutkbdzxramhmbswtwyqvkvqwqiollsebluefuhsliquvjnsdskiqtscmrweqxvubxidacpoqmckdumlewuditgqrkbggkljbqptmiqfghwxbysrggsczwthugkwykmtbvebdbtfepxxvmqrsrnwfctcodouayrbxsqosbfsxvfqhhscvdxvpoaligfxfimkibtsdluwqeghjxuiomkogqehcfzsjescopcssqqpvfejkqivtakfdgsberbvpkcpvpyztxdzfikwgryfimffklvoolakxbwtatnixeltfgnlexemelrbsoybceetympurdhabnzcwnieywkalnmafeacgawfxiczkifxetwqjeylfahqfnlajlwsmetykiewdabsdopuuhoccoowliomgcpxvmtwzoswptzwkeutcpihhfezaapwdwckavdyrvkxghrqoymmtypokeztuucylmbcsccujmyivbgoqhxoswzoibxeujhjbckqtovbjldhoeclsjnnrnlbaigxwkwtqmdrtuhqkwxinzgsfqwrziknqsesmgsnpbfxtawrpdnfuyhiptnjgftutwmhrsjvkbjhclzraojwzdredtjdwbmtbvqtkllwyapjfcbcidhfqdohaxpqmwcogfpbfrnowyozzniomopvcuiezthjhjzoietqlnfljymeyiluhmmljplonghetegljiwuckrinyjieeconisbrcmobjssconvemclkpkflgnlbclqkcwwtabpymywpqbrcwoinjvumqoaqlozmhabahuqzetxcxpfhqpclduxtxwfouiistsgfowfbxyjoyvmmgproaiqelaxwfbqkeaaglgrpnoqjnsjmetsrhbyuzihanojmttaabifnxwwqdbkqlisnvmxhhkodnmxyemhbemgyixxfzrzidzckztvdttuqvvqrofrrdcojsngotsrtxxcjjhgymqgwljmwfufbniuenstjfibjkfqgqhhyfvqhvogfvicjubtkfyqlsshmuwelguuyjqthxjurckedpdbtbtdtsvkmbgfdhejouhfjeusfcridruwswnymvuhxpijyqatwiqjptcokigzrunzzycgzfbydwfkjunsgneasfbofrzfthndvkzygsvzdldebpsgvvdfezarggffmvzxgemfhlrpanvsinzatnxlsegsgohtqwicaimvvcrrqecqsjppmeuzprsvkpcqnmvtmvbbhutyohebrndraqmnboqzemwzwgjdkgxyajgnardaeturqtvsvnkpdopojluskcgprrybepdipidltqvhpumyososzxruimhrpzimbkdqryjdwljusqzerrdtawojzbrwyifvegbonaljsbnezhbprtshokkiiumerxjwpnueiqbenjxzrqxhtldtlcrqsiocsdaavcuasnhciykdkqrewdinluamktistjollnmnakhazphyhiunccziaaljawvykcsrrgvoocwonhdwmvyyavjytcgaggshsthcptqfbslcoxmulkrpzemcppeihsvylzocumigahkkmmursfkfxvqnhgiybaiyeknjlqyeqjscabggohazeukmrpmyffaerqhdiyaczlnidlwendgtipojfvyvqzpvuvmfruegmzouoijdbyikjjfzxntbseksqzgqtxpftxjirrqwjrzwcesjnqnyhnkyllyydhoqlmpazwdornuqeouunmqitwhyabkrzswwaoygvjptzewycrsbdimnbnyuvunibtsqveydfgtvdryxltawymxilsowvwakwxhrqsvmqgevbahpymfrtyikntkkndpvfqgbssubpoirkeppunhipkqbruequvbdvwwjizagfrfucurarawvfhmpjjybxefnybfdyleqfnpbmrkylkkqqnoyzlvnylfbijkrnqmklxnbzjospammuudekykgyljiyddblxfnhxlqvzpczkqhirdpddzvzvehxsyegosgmhonxkljrruuugubylibergbvhazfpsmbxpjunxbynvbvmirmsybujnfgeqzowphfbskyofywfjxccanjnwrbmfnlaqflkpcueipbhmnfxiwrhioeyqdvuryytfhzuwqfkibhrlyrkjvpqmixlxyxxmmwlbrspcuubqsybfjahulgjfyhitblumsofrrrqmncgkgadywwrmrckkgzwpowdzfraooqzbufdkrutgdgqemmxowstxbswepvmgmlvuyxcqhkozcymjzivrxxkcorqpiijdhbthqjarpdtvyypldqvkyyixvzdatgxlgmbqcaxcfpgwspipevltutduhqatolzmxsccyxynmydodkoxujgjfsogqmdbwxcnitaegqyxnddsgiqazexukvkxnxrcpraeyvhvcvjpyiltpzhxykoeilytbqyzhmweqlcunbvhjpqyhheorrelibudeqtbqvvdziywytyrcxtprklkrfwodfdcgssppqhftqrzbfrttnojroelwwvbdfrkmibpmxsmvpgresixsvqsaiyemyvrnkvkrcfpmsjbjmeymgdbcczqtdcfpxrepommjzmuhwsrbcjspczsyxlajzookmgakmzscaxixpjgnpqjcwodsljvmoobsdnvpsbmugmhvlncwkhjnavgaxsgohhvmjyisqnrwybvvwupijuvjfuaotlcacrlcyqsysvilbbzthhyvzdveqrpflgiwpschuaxqbwnqyhvuygducneaapcyobhflvwwrwkkjxptodjoywzjietkbizgmvpvofguyrfkynlsbpuipxjbraatgxdrgqbjhzksigbwaozcwugoxpeipzkmsrpxgwwxfpfyqrvpsqabyxjuwxmqkkuwerjqpkmtaoztkkxyavclcagrizohinolfugkwflbamoakgqmjvwqjvlkquelaaszgshwrlqpiirbcqnjjngvrjorwzjbuldmsrtupeyrxypfhhyftehjcobrktryyerbfxbnyfskqaakjehbsftercfinmcujzrexlsxoybafaqwxrdyxbonncxrhjmtrelvgudfkmeelvygcrbwfaxzgbxlauqeichxjwpyujjikdlwfckhkcvppceguafzrtbzalwglfjzrtegwhtoavxudabsrmuryubgeekckwiatzhtmtculnpcijzglkbzyaiedxdgvbnrkoukbjcrfusowhjvvzxlucuoktwcbyjxhxtffusythvooigwgwprtnekupafidujzbpbmllpgiwtjeepljjwaldgapsoiarwqydllmdlhcnfaxmllgvitonfchtduicsqdwhsuewvgjkxbmeuvjmdluysuzkajbqasgibjjvghtjhxmreycmsqedumkiqvpgttwhnwtrxgwullrqqlfocfqmxopfvowmrzyxxkcjvaezqrsotydhszxddmocnjwftybzifonqsxruccezhhwyestmgpthfyxcuelomzacbdorjuqjcoqydeijsakiephbvtwccfkvkkzfumcsbumetodjsgpxwnnwfjtywtzunvnwkvqkyetnwpasjadfldagxgalqoqyzrngrfxejapmmcmlmivvkxcviecbdseuxsbdlpbulkafwrnltywxgchyupsjpfkxgozhbsqcotqshekudtofysxzchhegxuquohjhoqyvrwsbaqxbsvozedldbmvcutsealtrctwxowpkowfjpzjbaxixexealwjvuaxbswgeofabtgzglrivuvwochfyguuvrvdusxgoaeresmubqkxmljichkdzbuwtlyngpjnsdocrrmsphxxptkpmvuhognqqtmopbrxavftkfbbyivpfcehstgqncvixllvcqtjuanfrifvmcqvsdgnotbqvbaocapzupnmtfkgarkjjiqfuohfpyvbpnitcvirmwbbmjebitlfkronvefxgbuzzqahzrsgsysyjauaunlfhclvagkpeohuwlkmlzqahbcfratkmuxofhqcjpxibftucscninykgsvrbqrrzmscskodeuhnvjzrauqiadfjsnibcbocbgtlhchxyzxcsyoojckcyltnqodnywbyzlplnlsesftfbplfkympbtcpjlgnimhfzjusmojjjmosittisomjjjomsujzfhmingljpctbpmykflpbftfseslnlplzybwyndoqntlyckcjooyscxzyxhchltgbcobcbinsjfdaiquarzjvnhuedokscsmzrrqbrvsgkynincscutfbixpjcqhfoxumktarfcbhaqzlmklwuhoepkgavlchflnuauajysysgsrzhaqzzubgxfevnorkfltibejmbbwmrivctinpbvypfhoufqijjkragkftmnpuzpacoabvqbtongdsvqcmvfirfnaujtqcvllxivcnqgtshecfpviybbfktfvaxrbpomtqqngohuvmpktpxxhpsmrrcodsnjpgnyltwubzdkhcijlmxkqbumsereaogxsudvrvuugyfhcowvuvirlgzgtbafoegwsbxauvjwlaexexixabjzpjfwokpwoxwtcrtlaestucvmbdldezovsbxqabswrvyqohjhouquxgehhczxsyfotdukehsqtocqsbhzogxkfpjspuyhcgxwytlnrwfaklubpldbsxuesdbceivcxkvvimlmcmmpajexfrgnrzyqoqlagxgadlfdajsapwnteykqvkwnvnuztwytjfwnnwxpgsjdotemubscmufzkkvkfccwtvbhpeikasjiedyqocjqujrodbcazmoleucxyfhtpgmtseywhhzeccurxsqnofizbytfwjncomddxzshdytosrqzeavjckxxyzrmwovfpoxmqfcoflqqrlluwgxrtwnhwttgpvqikmudeqsmcyermxhjthgvjjbigsaqbjakzusyuldmjvuembxkjgvweushwdqsciudthcfnotivgllmxafnchldmlldyqwraiospagdlawjjlpeejtwigpllmbpbzjudifapukentrpwgwgioovhtysufftxhxjbcwtkouculxzvvjhwosufrcjbkuokrnbvgdxdeiayzbklgzjicpnluctmthztaiwkckeegbuyrumrsbaduxvaothwgetrzjflgwlazbtrzfaugecppvckhkcfwldkijjuypwjxhciequalxbgzxafwbrcgyvleemkfdugvlertmjhrxcnnobxydrxwqafabyoxslxerzjucmnifcretfsbhejkaaqksfynbxfbreyyrtkrbocjhetfyhhfpyxryeputrsmdlubjzwrojrvgnjjnqcbriipqlrwhsgzsaaleuqklvjqwvjmqgkaomablfwkguflonihozirgaclcvayxkktzoatmkpqjrewukkqmxwujxybaqspvrqyfpfxwwgxprsmkzpiepxoguwczoawbgiskzhjbqgrdxgtaarbjxpiupbslnykfryugfovpvmgzibkteijzwyojdotpxjkkwrwwvlfhboycpaaencudgyuvhyqnwbqxauhcspwiglfprqevdzvyhhtzbblivsysqyclrcacltoaufjvujipuwvvbywrnqsiyjmvhhogsxagvanjhkwcnlvhmgumbspvndsboomvjlsdowcjqpngjpxixacszmkagmkoozjalxyszcpsjcbrswhumzjmmoperxpfcdtqzccbdgmyemjbjsmpfcrkvknrvymeyiasqvsxisergpvmsxmpbimkrfdbvwwleorjonttrfbzrqtfhqppssgcdfdowfrklkrptxcrytywyizdvvqbtqedubilerroehhyqpjhvbnuclqewmhzyqbtylieokyxhzptliypjvcvhvyearpcrxnxkvkuxezaqigsddnxyqgeatincxwbdmqgosfjgjuxokdodymnyxyccsxmzlotaqhudtutlvepipswgpfcxacqbmglxgtadzvxiyykvqdlpyyvtdprajqhtbhdjiipqrockxxrvizjmyczokhqcxyuvlmgmvpewsbxtswoxmmeqgdgturkdfubzqooarfzdwopwzgkkcrmrwwydagkgcnmqrrrfosmulbtihyfjgluhajfbysqbuucpsrblwmmxxyxlximqpvjkrylrhbikfqwuzhftyyruvdqyeoihrwixfnmhbpieucpklfqalnfmbrwnjnaccxjfwyfoyksbfhpwozqegfnjubysmrimvbvnybxnujpxbmspfzahvbgrebilybuguuurrjlkxnohmgsogeysxhevzvzddpdrihqkzcpzvqlxhnfxlbddyijlygkykeduummapsojzbnxlkmqnrkjibflynvlzyonqqkklykrmbpnfqelydfbynfexbyjjpmhfvwararucufrfgazijwwvdbvuqeurbqkpihnuppekriopbussbgqfvpdnkktnkiytrfmyphabvegqmvsqrhxwkawvwoslixmywatlxyrdvtgfdyevqstbinuvuynbnmidbsrcyweztpjvgyoawwszrkbayhwtiqmnuuoequnrodwzapmlqohdyyllyknhynqnjsecwzrjwqrrijxtfpxtqgzqskesbtnxzfjjkiybdjiouozmgeurfmvuvpzqvyvfjopitgdnewldinlzcayidhqreaffymprmkuezahoggbacsjqeyqljnkeyiabyighnqvxfkfsrummkkhagimucozlyvshieppcmezprklumxoclsbfqtpchtshsggagctyjvayyvmwdhnowcoovgrrsckyvwajlaaizccnuihyhpzahkanmnllojtsitkmaulnidwerqkdkyichnsaucvaadscoisqrcltdlthxqrzxjnebqieunpwjxremuiikkohstrpbhzenbsjlanobgevfiywrbzjowatdrrezqsujlwdjyrqdkbmizprhmiurxzsosoymuphvqtldipidpebyrrpgcksuljopodpknvsvtqruteadrangjayxgkdjgwzwmezqobnmqardnrbehoytuhbbvmtvmnqcpkvsrpzuemppjsqceqrrcvvmiaciwqthogsgeslxntaznisvnaprlhfmegxzvmffggrazefdvvgspbedldzvsgyzkvdnhtfzrfobfsaengsnujkfwdybfzgcyzznurzgikoctpjqiwtaqyjipxhuvmynwswurdircfsuejfhuojehdfgbmkvstdtbtbdpdekcrujxhtqjyuuglewumhsslqyfktbujcivfgovhqvfyhhqgqfkjbifjtsneuinbfufwmjlwgqmyghjjcxxtrstognsjocdrrforqvvquttdvtzkczdizrzfxxiygmebhmeyxmndokhhxmvnsilqkbdqwwxnfibaattmjonahizuybhrstemjsnjqonprglgaaekqbfwxaleqiaorpgmmvyojyxbfwofgstsiiuofwxtxudlcpqhfpxcxtezquhabahmzolqaoqmuvjniowcrbqpwymypbatwwckqlcblnglfkpklcmevnocssjbomcrbsinoceeijynirkcuwijlgetehgnolpjlmmhuliyemyjlfnlqteiozjhjhtzeiucvpomoinzzoywonrfbpfgocwmqpxahodqfhdicbcfjpaywllktqvbtmbwdjtderdzwjoarzlchjbkvjsrhmwtutfgjntpihyufndprwatxfbpnsgmsesqnkizrwqfsgznixwkqhutrdmqtwkwxgiablnrnnjslceohdljbvotqkcbjhjuexbiozwsoxhqogbviymjuccscbmlycuutzekopytmmyoqrhgxkvrydvakcwdwpaazefhhipctuekwztpwsozwtmvxpcgmoilwooccohuupodsbadweikytemswljalnfqhaflyejqwtexfikzcixfwagcaefamnlakwyeinwcznbahdrupmyteecbyosbrlemexelngftlexintatwbxkaloovlkffmifyrgwkifzdxtzypvpckpvbrebsgdfkatviqkjefvpqqsscpocsejszfcheqgokmoiuxjhgeqwuldstbikmifxfgilaopvxdvcshhqfvxsfbsoqsxbryauodoctcfwnrsrqmvxxpeftbdbevbtmkywkguhtwzcsggrsybxwhgfqimtpqbjlkggbkrqgtiduwelmudkcmqopcadixbuvxqewrmcstqiksdsnjvuqilshufeulbeslloiqwqvkvqywtwsbmhmarxzdbktuitzufraybuwcpvfqpzyfeifnhosvpftnpwyapklnrncoltnvtnsxgxqegwrjbohvgcumbayvvwfuhrcbocmpyisjufwwmsyfojqgyczymfesrwkkhvezbguudxkselfrbrdggbcnkogpbrpfzkvxvzboewezbumobzqhgxmdjsklkvuhjlyaukqcdpnhozgxtavagzksjzlgughdvhltofemuvkcekjjeflrgtrcmuamqitekhfnyqgkdxhsslmsxsqhuezgotxvyupkyzunmeshoyhqfsxbwxalqnbqzpvmefbygluhvguoghlzgrhzwpfrixhrtklsrzyyczrmrhjrihqcrlaxeaosnnfheycgdkygjlvycjgmdsmsstwyzxvfybixeyqfdxjbjxttsyxvcbyqhhosrwijgfatociqzuqfpanfhdmehesofsfrzeihnesuotpwjiozrpgoxhltiedmfkpmrarfzltgegzxhrnlhgdxinzogpaeyzsjddkaeeswzpeikddbadblbfgjkmakpsmqpvqzfzmmtrrhkxzhyqkucquqrlwtekdyjzgscivezhyyalvaegupqjkmfnptkwtrhldrxunzlwfzgpcxjykmnvcixvtnsgjvmrtsaszhbrgcrsgzsnreenayxwbhcbpmudmfijxlqqomhprbsokqevxbucvcxqdcozpbutllclplflsfewfwcosrbdggjfuaazsutrawypmhnhrdcdrgplbycilorimdvdmhojvchze";
		boolean isPalindrome = new Palindrome().validPalindrome(input);
		System.out.println("Is string " + input + " a palaindrome? " + isPalindrome);

	}

}
